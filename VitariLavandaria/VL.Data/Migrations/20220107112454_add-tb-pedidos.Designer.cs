// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VL.Data.Context;

namespace VL.Data.Migrations
{
    [DbContext(typeof(VlContext))]
    [Migration("20220107112454_add-tb-pedidos")]
    partial class addtbpedidos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("CargoUsuario", b =>
                {
                    b.Property<int>("CargosId")
                        .HasColumnType("int");

                    b.Property<string>("UsuariosLogin")
                        .HasColumnType("varchar(95)");

                    b.HasKey("CargosId", "UsuariosLogin");

                    b.HasIndex("UsuariosLogin");

                    b.ToTable("CargoUsuario");
                });

            modelBuilder.Entity("VL.Core.Domain.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("VL.Core.Domain.EstadoPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EstadoPedidos");
                });

            modelBuilder.Entity("VL.Core.Domain.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<decimal>("PrecoUnidade")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("VL.Core.Domain.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("VL.Core.Domain.Usuario", b =>
                {
                    b.Property<string>("Login")
                        .HasColumnType("varchar(95)");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.HasKey("Login");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CargoUsuario", b =>
                {
                    b.HasOne("VL.Core.Domain.Cargo", null)
                        .WithMany()
                        .HasForeignKey("CargosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VL.Core.Domain.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
